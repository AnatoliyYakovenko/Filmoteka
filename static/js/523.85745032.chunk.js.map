{"version":3,"file":"static/js/523.85745032.chunk.js","mappings":"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","sources":["components/API/fetch.js","image/heart-icon.svg","image/heart-filled-icon.svg","webpack://react-homework-template/./src/components/Movie/Movie.module.css?e0b9","components/Movie/Movie.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","components/GenresList/GenresList.jsx","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'fcf8166cc673f1c39affaebc2a2648bc',\n};\n\nexport const getAllMovies = async onFetch => {\n  try {\n    const { data } = await axios.get('/discover/movie');\n    onFetch(data.results);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getAllGenres = async onFetch => {\n  try {\n    const { data } = await axios.get('/genre/movie/list');\n    onFetch(data.genres);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getTrendingMovie = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieInfo = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews`);\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHeartIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.66683 2C2.82616 2 1.3335 3.47733 1.3335 5.3C1.3335 6.77133 1.91683 10.2633 7.65883 13.7933C7.76168 13.8559 7.87976 13.889 8.00016 13.889C8.12056 13.889 8.23864 13.8559 8.3415 13.7933C14.0835 10.2633 14.6668 6.77133 14.6668 5.3C14.6668 3.47733 13.1742 2 11.3335 2C9.49283 2 8.00016 4 8.00016 4C8.00016 4 6.5075 2 4.66683 2Z\",\n    stroke: \"#4440F7\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeartIcon);\nexport default __webpack_public_path__ + \"static/media/heart-icon.16f6969c76b55130f27931c706152f47.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHeartFilledIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.66683 2C2.82616 2 1.3335 3.47733 1.3335 5.3C1.3335 6.77133 1.91683 10.2633 7.65883 13.7933C7.76168 13.8559 7.87976 13.889 8.00016 13.889C8.12056 13.889 8.23864 13.8559 8.3415 13.7933C14.0835 10.2633 14.6668 6.77133 14.6668 5.3C14.6668 3.47733 13.1742 2 11.3335 2C9.49283 2 8.00016 4 8.00016 4C8.00016 4 6.5075 2 4.66683 2Z\",\n    fill: \"#4B48DA\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeartFilledIcon);\nexport default __webpack_public_path__ + \"static/media/heart-filled-icon.36e942a69a6a42a9eb1d20d32a78fe9a.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Movie_wrapper__ab4g-\",\"films__img\":\"Movie_films__img__oRpl4\",\"films__description\":\"Movie_films__description__jdGN4\",\"films__name\":\"Movie_films__name__a5NeB\",\"films__container\":\"Movie_films__container__Cc0lZ\",\"films__info\":\"Movie_films__info__y7jS6\",\"films__rating\":\"Movie_films__rating__wPIad\",\"active\":\"Movie_active__hKu-v\",\"films\":\"Movie_films__Z29iz\",\"favoriteBtn\":\"Movie_favoriteBtn__K068G\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { ReactComponent as Heart } from 'image/heart-icon.svg';\nimport { ReactComponent as HeartFilled } from 'image/heart-filled-icon.svg';\nimport css from './Movie.module.css';\n\nexport const Movie = ({movie, onRemoveFromFavorites}) => {\n  const [isFavorite, setIsFavorite] = useState(false);\n  const location = useLocation();\n  useEffect(() => {\n    const favoriteMovies = JSON.parse(localStorage.getItem('favoriteMovies')) || [];\n    setIsFavorite(favoriteMovies.some(favoriteMovie => favoriteMovie.id === movie.id));\n  }, [movie.id]);\n\n  const toggleFavorite = () => {\n    if (isFavorite) {\n      removeFromFavorites();\n    } else {\n      addToFavorites();\n    }\n  };\n  const addToFavorites = () => {\n    let favoriteMovies = JSON.parse(localStorage.getItem('favoriteMovies')) || [];\n      favoriteMovies.push(movie);\n    localStorage.setItem('favoriteMovies', JSON.stringify(favoriteMovies));\n    setIsFavorite(true);\n  };\n\n  // const removeFromFavorites = () => {\n  //   let favoriteMovies = [];\n  //   const storedMovies = localStorage.getItem('favoriteMovies');\n  //   if (storedMovies) {\n  //     favoriteMovies = JSON.parse(storedMovies);\n  //     favoriteMovies = favoriteMovies.filter(favoriteMovie => favoriteMovie.id !== movie.id);\n  //     localStorage.setItem('favoriteMovies', JSON.stringify(favoriteMovies));\n  //   }\n  //   onRemoveFromFavorites(movie.id);\n  //   setIsFavorite(false);\n\n  // };\n  const removeFromFavorites = () => {\n    const storedMovies = JSON.parse(localStorage.getItem('favoriteMovies'));\n    let favoriteMovies = [];\n    if (storedMovies) {\n      favoriteMovies = storedMovies.filter((storedMovie) => storedMovie.id !== movie.id);\n      localStorage.setItem('favoriteMovies', JSON.stringify(favoriteMovies));\n    }\n    onRemoveFromFavorites(movie.id);\n    setIsFavorite(false);\n  };\n\n\n  return (\n    <div className={css.wrapper}>\n    <Link\n      to={`/movies/${movie.id}`}\n      className={css.films__item}\n      key={movie.id}\n      state={{ from: location }}\n    >\n      <div className={css.films__img}>\n        <img\n          src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://www.drupal.org/files/project-images/broken-image.jpg'}\n          alt={movie.original_title}\n          loading=\"lazy\"\n        />\n      </div>\n      </Link>\n      <div className={css.films__description}>\n        <p className={css.films__name}>{movie.title || movie.name}</p>\n        <div className={css.films__container}>\n          <p className={css.films__info}>\n            {movie.release_date || movie.first_air_date}\n          </p>\n          <span className={css.films__rating}>\n            {movie.vote_average?.toFixed(2)}\n          </span>\n        </div>\n      </div>\n      <button\n      className={css.favoriteBtn}\n      type=\"button\" onClick={toggleFavorite} >\n      {isFavorite ? 'Remove from Favorites' : 'Add to Favorites'}\n      {isFavorite ? <HeartFilled/> : <Heart/>}\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"films\":\"MovieList_films__YHG2-\"};","import { Movie } from 'components/Movie/Movie';\nimport css from './MovieList.module.css';\nimport { nanoid } from 'nanoid';\n\nexport const MovieList = ({movies, onRemoveFromFavorites}) => {\n  const uniqueMovies = movies.filter((movie, index) => {\n    return movies.findIndex((m) => m.id === movie.id) === index;\n  });\n  return (\n    <ul className={css.films}>\n     {uniqueMovies?.map((movie) => {\n        return <Movie key={nanoid()} movie={movie} onRemoveFromFavorites={onRemoveFromFavorites}/>;\n      })}\n    </ul>\n  );\n};\n","import { useState } from 'react';\n// import { getAllGenres } from 'components/API/fetch';\n\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 8 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function GenresList({ genres, selectedGenres, onGenreSelect }) {\n  const [genreName, setGenreName] = useState([]);\n\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setGenreName(value);\n    onGenreSelect(value);\n  };\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300, backgroundColor: 'white', borderRadius: '3px' }}>\n        <InputLabel\n         sx={{\n          color: genreName.length > 0 ? 'white' : '#808080',\n          marginTop: genreName.length > 0 ? '-8px' : '-3px',\n        }}\n        id=\"demo-multiple-checkbox-label\"\n      >\n          Genres\n        </InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={genreName}\n          onChange={handleChange}\n          input={<OutlinedInput sx={{ height: 48 }} label=\"Genres\" />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {genres?.map((genre) => (\n              <MenuItem key={genre.id} value={genre.name}>\n                <Checkbox checked={selectedGenres.indexOf(genre.name) > -1} />\n                <ListItemText primary={genre.name} />\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Movies_Searchbar__x0Q8w\",\"SearchForm\":\"Movies_SearchForm__wjo2h\",\"SearchFormButton\":\"Movies_SearchFormButton__8YSXn\",\"SearchFormButtonLabel\":\"Movies_SearchFormButtonLabel__wEI6R\",\"SearchFormInput\":\"Movies_SearchFormInput__bFrPB\",\"noFound\":\"Movies_noFound__hUq6p\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery, getAllMovies, getAllGenres } from 'components/API/fetch';\nimport {  } from 'components/API/fetch';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport GenresList  from 'components/GenresList/GenresList';\nimport css from './Movies.module.css';\n\nexport default function Movies () {\n  const [allMovies, setAllMovies] = useState(null);\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [genres, setGenres] = useState([]);\n\n\n  const movieToSearch = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    getAllMovies(setAllMovies);\n    getAllGenres(setGenres);\n  }, []);\n\n  useEffect(() => {\n    if (!movieToSearch) return;\n    setSearchQuery(movieToSearch);\n    getMovieByQuery(movieToSearch).then(({ results }) => {\n    setSearchMovies(results);\n    });\n  }, [movieToSearch]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsFormSubmitted(true);\n    setSearchParams({ query: searchQuery });\n  };\n  const handleGenreSelect = (selectedGenres) => {\n    setSelectedGenres(selectedGenres);\n  };\n\n  const filterMoviesByGenre = movies => {\n    if (selectedGenres.length === 0) {\n      return movies;\n    } else {\n      return movies.filter(movie => {\n        return movie.genre_ids?.some(genreId => getGenreId(genres, selectedGenres).includes(genreId));\n      });\n    }\n  };\n\n  const getGenreId = (genres, selectedGenres) => {\n    const genreIds = [];\n    selectedGenres.forEach(selectedGenre => {\n      const genre = genres.find(genre => genre.name === selectedGenre);\n      if (genre) {\n        genreIds.push(genre.id);\n      }\n    });\n    return genreIds;\n  }\n\n\nconsole.log(allMovies);\n\n\n\n  const filteredMovies = filterMoviesByGenre(searchMovies || allMovies);\n\n  return (\n    <>\n      <header className={css.Searchbar}>\n        <form className={css.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={css.SearchFormButton}>\n            <span className={css.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={css.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"searchMovie\"\n            autoFocus\n            placeholder=\"Search movie\"\n            onChange={e => setSearchQuery(e.target.value)}\n          />\n        </form>\n        <GenresList\n        genres={genres}\n        selectedGenres={selectedGenres}\n        onGenreSelect={handleGenreSelect}\n        />\n      </header>\n      <main>\n      {filteredMovies?.length > 0 ? (\n          <MovieList movies={filteredMovies} />\n        ) : (\n          isFormSubmitted && (\n            <p className={css.noFound}>Nothing found... Please try to search another movie!</p>\n          )\n        )}\n      </main>\n    </>\n  );\n}\n"],"names":["axios","api_key","getAllMovies","onFetch","data","results","console","log","message","getAllGenres","genres","getTrendingMovie","params","page","getMovieByQuery","query","getMovieInfo","movie_id","getReviews","getCast","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHeartIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeLinecap","strokeLinejoin","ForwardRef","SvgHeartFilledIcon","Movie","movie","onRemoveFromFavorites","useState","isFavorite","setIsFavorite","location","useLocation","useEffect","favoriteMovies","JSON","parse","localStorage","getItem","some","favoriteMovie","addToFavorites","push","setItem","stringify","removeFromFavorites","storedMovies","filter","storedMovie","className","css","to","state","from","src","poster_path","alt","original_title","loading","name","release_date","first_air_date","vote_average","toFixed","type","onClick","MovieList","movies","uniqueMovies","index","findIndex","m","map","nanoid","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","GenresList","selectedGenres","onGenreSelect","genreName","setGenreName","FormControl","sx","backgroundColor","borderRadius","InputLabel","color","marginTop","Select","labelId","multiple","value","onChange","event","input","OutlinedInput","label","renderValue","selected","join","genre","MenuItem","Checkbox","checked","ListItemText","primary","Movies","allMovies","setAllMovies","searchMovies","setSearchMovies","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","isFormSubmitted","setIsFormSubmitted","setSelectedGenres","setGenres","movieToSearch","get","then","getGenreId","genreIds","forEach","selectedGenre","find","filteredMovies","genre_ids","genreId","includes","onSubmit","preventDefault","autoComplete","autoFocus","placeholder","e"],"sourceRoot":""}