{"version":3,"file":"static/js/76.2bc05de4.chunk.js","mappings":"iTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,sGACPF,EAAAA,EAAAA,IAAU,sBAAuB,CACtDG,OAAQ,CACNC,KAAM,KAHoB,uBACtBC,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,qDAShBC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAU,gBAAiB,CAChDG,OAAQ,CACNI,MAAAA,KAHyB,uBACrBF,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfG,EAAY,mCAAG,WAAMC,GAAN,yFACHT,EAAAA,EAAAA,IAAA,iBAAoBS,IADjB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAU,mCAAG,WAAMD,GAAN,yFACDT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aADC,uBAChBJ,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVM,EAAO,mCAAG,WAAMF,GAAN,yFACET,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aADF,uBACbJ,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,qD,4GClCpB,GAAgB,cAAgB,4BAA4B,SAAW,uBAAuB,UAAY,wBAAwB,UAAY,wBAAwB,UAAY,wBAAwB,UAAY,wBAAwB,OAAS,sB,SCG1OO,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAOR,IANAE,EAAAA,EAAAA,YAAU,WACHF,IACLL,EAAAA,EAAAA,IAAQK,GAAIG,MAAK,SAAAC,GACfL,EAAQK,EAAKN,KACd,GACF,GAAE,CAACE,KACCF,EACH,OAAO,KAET,IAAMO,IAAWP,EAAKQ,OACtB,OACE,8BACCD,GACC,eAAIE,UAAWC,EAAAA,cAAf,SACGV,EAAKW,KAAI,YAAqD,IAAlDT,EAAiD,EAAjDA,GAAIU,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC5C,OACE,gBAAIL,UAAWC,EAAAA,UAAf,WACE,gBAAKD,UAAWC,EAAAA,SAAhB,UACE,gBACED,UAAWC,EAAAA,MACXK,IAAKH,EAAY,yCAAqCA,GAAiB,+DACvEI,IAAKH,OAGT,iBAAKJ,UAAWC,EAAAA,UAAhB,WACE,cAAGD,UAAWC,EAAAA,UAAd,SAA8BG,KAC9B,cAAGJ,UAAWC,EAAAA,UAAd,SAA8BI,SAVCZ,EActC,OAEA,cAAGO,UAAWC,EAAAA,OAAd,gCAGR,C","sources":["components/API/fetch.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'fcf8166cc673f1c39affaebc2a2648bc',\n};\n\nexport const getTrendingMovie = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieInfo = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews`);\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"actorImg\":\"Cast_actorImg__T6qL2\",\"actorItem\":\"Cast_actorItem__fXEWx\",\"ActorInfo\":\"Cast_ActorInfo__hn1gA\",\"actorName\":\"Cast_actorName__XabVA\",\"actorChar\":\"Cast_actorChar__VY6Sx\",\"noCast\":\"Cast_noCast__SInMN\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCast } from 'components/API/fetch';\nimport css from './Cast.module.css';\nexport const Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { id } = useParams();\n  useEffect(() => {\n    if (!id) return;\n    getCast(id).then(info => {\n      setCast(info.cast);\n    });\n  }, [id]);\n  if (!cast) {\n    return null;\n  }\n  const isCast = !!cast.length;\n  return (\n    <>\n    {isCast? (\n      <ul className={css.castContainer}>\n        {cast.map(({ id, profile_path, original_name, character }) => {\n          return (\n            <li className={css.actorItem} key={id}>\n              <div className={css.actorImg}>\n                <img\n                  className={css.image}\n                  src={profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : 'https://www.drupal.org/files/project-images/broken-image.jpg'}\n                  alt={original_name}\n                />\n              </div>\n              <div className={css.ActorInfo}>\n                <p className={css.actorName}>{original_name}</p>\n                <p className={css.actorChar}>{character}</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    ) : (<p className={css.noCast}>There is no cast!</p>)}\n    </>\n  );\n};\n"],"names":["axios","api_key","getTrendingMovie","params","page","data","getMovieByQuery","query","getMovieInfo","movie_id","getReviews","getCast","Cast","useState","cast","setCast","id","useParams","useEffect","then","info","isCast","length","className","css","map","profile_path","original_name","character","src","alt"],"sourceRoot":""}