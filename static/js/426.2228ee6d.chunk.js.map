{"version":3,"file":"static/js/426.2228ee6d.chunk.js","mappings":"4WAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAY,mCAAG,WAAMC,GAAN,kGAEDH,EAAAA,EAAAA,IAAU,mBAFT,gBAEhBI,EAFgB,EAEhBA,KACRD,EAAQC,EAAKC,SAHW,gDAKxBC,EAAAA,GAAAA,MAAY,KAAMC,SALM,yDAAH,sDASZC,EAAY,mCAAG,WAAML,GAAN,kGAEDH,EAAAA,EAAAA,IAAU,qBAFT,gBAEhBI,EAFgB,EAEhBA,KACRD,EAAQC,EAAKK,QAHW,gDAKxBH,EAAAA,GAAAA,MAAY,KAAMC,SALM,yDAAH,sDASZG,EAAgB,mCAAG,+GAELV,EAAAA,EAAAA,IAAU,sBAAuB,CACtDW,OAAQ,CACNC,KAAM,KAJkB,uBAEpBR,EAFoB,EAEpBA,KAFoB,kBAOrBA,GAPqB,gCAS5BE,EAAAA,GAAAA,MAAY,KAAMC,SATU,yDAAH,qDAahBM,EAAe,mCAAG,WAAMC,GAAN,kGAEJd,EAAAA,EAAAA,IAAU,gBAAiB,CAChDW,OAAQ,CACNG,MAAAA,KAJuB,uBAEnBV,EAFmB,EAEnBA,KAFmB,kBAOpBA,GAPoB,gCAS3BE,EAAAA,GAAAA,MAAY,KAAMC,SATS,yDAAH,sDAafQ,EAAY,mCAAG,WAAMC,GAAN,kGAEDhB,EAAAA,EAAAA,IAAA,iBAAoBgB,IAFnB,uBAEhBZ,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,gCAKxBE,EAAAA,GAAAA,MAAY,KAAMC,SALM,yDAAH,sDASZU,EAAU,mCAAG,WAAMD,GAAN,kGAEChB,EAAAA,EAAAA,IAAA,iBAAoBgB,EAApB,aAFD,uBAEdZ,EAFc,EAEdA,KAFc,kBAGfA,GAHe,gCAKtBE,EAAAA,GAAAA,MAAY,KAAMC,SALI,yDAAH,sDASVW,EAAO,mCAAG,WAAMF,GAAN,kGAEIhB,EAAAA,EAAAA,IAAA,iBAAoBgB,EAApB,aAFJ,uBAEXZ,EAFW,EAEXA,KAFW,kBAGZA,GAHY,gCAKnBE,EAAAA,GAAAA,MAAY,KAAMC,SALC,yDAAH,qD,+GCrEpB,GAAgB,gBAAkB,kCAAkC,gBAAkB,kCAAkC,OAAS,yBAAyB,WAAa,6BAA6B,aAAe,+BAA+B,QAAU,0BAA0B,SAAW,4B,SCMlR,SAASY,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,IANAE,EAAAA,EAAAA,YAAU,WACHF,IACLN,EAAAA,EAAAA,IAAWM,GAAIG,MAAK,YAAkB,IAAfrB,EAAc,EAAdA,QACrBiB,EAAWjB,EACZ,GACF,GAAE,CAACkB,KACCF,EACH,OAAO,KAET,IAAMM,IAAcN,EAAQO,OAC5B,OACE,iCACE,oCACCD,GACC,wBACGN,EAAQQ,KAAI,SAAAC,GACX,OACE,gBAAoBC,UAAWC,EAAAA,gBAA/B,WACE,eAAGD,UAAWC,EAAAA,OAAd,qBAEE,iBAAMD,UAAWC,EAAAA,WAAjB,SAAkCF,EAAOG,aAG3C,iBAAKF,UAAWC,EAAAA,iBAAhB,WACE,cAAGD,UAAWC,EAAAA,aAAd,uBACA,iBAAMD,UAAWC,EAAAA,QAAjB,SAA+BF,EAAOI,eARjCJ,EAAOP,GAYnB,OAGH,cAAGQ,UAAWC,EAAAA,SAAd,qCAIP,C","sources":["components/API/fetch.js","webpack://react-homework-template/./src/components/Comments/Comments.module.css?bc86","components/Comments/Comments.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'fcf8166cc673f1c39affaebc2a2648bc',\n};\n\nexport const getAllMovies = async onFetch => {\n  try {\n    const { data } = await axios.get('/discover/movie');\n    onFetch(data.results);\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getAllGenres = async onFetch => {\n  try {\n    const { data } = await axios.get('/genre/movie/list');\n    onFetch(data.genres);\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getTrendingMovie = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page: 1,\n      },\n    });\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n      },\n    });\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieInfo = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}`);\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getReviews = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}/reviews`);\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getCast = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}/credits`);\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewContainer\":\"Comments_reviewContainer__6boFx\",\"authorContainer\":\"Comments_authorContainer__TaM+s\",\"author\":\"Comments_author__N3New\",\"authorName\":\"Comments_authorName__WWZse\",\"contentTitle\":\"Comments_contentTitle__EwQJd\",\"content\":\"Comments_content__Dci6F\",\"noReview\":\"Comments_noReview__8ukTf\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { getReviews } from 'components/API/fetch';\n\nimport css from './Comments.module.css';\n\nexport default function Comments(){\n  const [reviews, setReviews] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (!id) return;\n    getReviews(id).then(({ results }) => {\n      setReviews(results);\n    });\n  }, [id]);\n  if (!reviews) {\n    return null;\n  }\n  const isReviews = !!reviews.length;\n  return (\n    <>\n      <h3>Reviews</h3>\n      {isReviews ? (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id} className={css.reviewContainer}>\n                <p className={css.author}>\n                  Author:\n                  <span className={css.authorName}>{review.author}</span>\n                </p>\n\n                <div className={css.contentContainer}>\n                  <p className={css.contentTitle}>Content:</p>\n                  <span className={css.content}>{review.content}</span>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p className={css.noReview}>There are no reviews!</p>\n      )}\n    </>\n  );\n};\n"],"names":["axios","api_key","getAllMovies","onFetch","data","results","toast","message","getAllGenres","genres","getTrendingMovie","params","page","getMovieByQuery","query","getMovieInfo","movie_id","getReviews","getCast","Comments","useState","reviews","setReviews","id","useParams","useEffect","then","isReviews","length","map","review","className","css","author","content"],"sourceRoot":""}