{"version":3,"file":"static/js/523.8bf3b5b3.chunk.js","mappings":"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","sources":["components/API/fetch.js","image/heart-icon.svg","image/heart-filled-icon.svg","webpack://react-homework-template/./src/components/Movie/Movie.module.css?e0b9","components/Movie/Movie.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","components/GenresList/GenresList.jsx","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'fcf8166cc673f1c39affaebc2a2648bc',\n};\n\nexport const getAllGenres = async onFetch => {\n  try {\n    const { data } = await axios.get('/genre/movie/list');\n    onFetch(data.genres);\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\nexport const getAllMovies = async (page, onFetch, totalPagesCallback, releaseYear) => {\n  try {\n    let releaseYearQuery = '';\n    if (releaseYear) {\n      releaseYearQuery = `&primary_release_year=${releaseYear}`;\n    }\n\n    const { data } = await axios.get(`/discover/movie?page=${page}${releaseYearQuery}`);\n    onFetch(data.results);\n    totalPagesCallback(data.total_pages);\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getTrendingMovie = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page: 1,\n      },\n    });\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieByQuery = async (\n  page,\n  query,\n  onFetch,\n  totalPagesCallback,\n  releaseYear\n) => {\n  try {\n    let releaseYearQuery = '';\n    if (releaseYear) {\n      releaseYearQuery = `&primary_release_year=${releaseYear}`;\n    }\n    const { data } = await axios.get(`/search/movie?page=${page}${releaseYearQuery}`, {\n      params: {\n        query,\n        page: page,\n      },\n    });\n    onFetch(data.results);\n    totalPagesCallback(data.total_pages);\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMovieInfo = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}`);\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getReviews = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}/reviews`);\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getCast = async movie_id => {\n  try {\n    const { data } = await axios.get(`/movie/${movie_id}/credits`);\n    return data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHeartIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.66683 2C2.82616 2 1.3335 3.47733 1.3335 5.3C1.3335 6.77133 1.91683 10.2633 7.65883 13.7933C7.76168 13.8559 7.87976 13.889 8.00016 13.889C8.12056 13.889 8.23864 13.8559 8.3415 13.7933C14.0835 10.2633 14.6668 6.77133 14.6668 5.3C14.6668 3.47733 13.1742 2 11.3335 2C9.49283 2 8.00016 4 8.00016 4C8.00016 4 6.5075 2 4.66683 2Z\",\n    stroke: \"#4440F7\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeartIcon);\nexport default __webpack_public_path__ + \"static/media/heart-icon.16f6969c76b55130f27931c706152f47.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHeartFilledIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.66683 2C2.82616 2 1.3335 3.47733 1.3335 5.3C1.3335 6.77133 1.91683 10.2633 7.65883 13.7933C7.76168 13.8559 7.87976 13.889 8.00016 13.889C8.12056 13.889 8.23864 13.8559 8.3415 13.7933C14.0835 10.2633 14.6668 6.77133 14.6668 5.3C14.6668 3.47733 13.1742 2 11.3335 2C9.49283 2 8.00016 4 8.00016 4C8.00016 4 6.5075 2 4.66683 2Z\",\n    fill: \"#4B48DA\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeartFilledIcon);\nexport default __webpack_public_path__ + \"static/media/heart-filled-icon.36e942a69a6a42a9eb1d20d32a78fe9a.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Movie_wrapper__ab4g-\",\"img\":\"Movie_img__WUHrV\",\"description\":\"Movie_description__p079L\",\"name\":\"Movie_name__+qs7c\",\"container\":\"Movie_container__lWqPt\",\"info\":\"Movie_info__SbDWC\",\"rating\":\"Movie_rating__sRAfJ\",\"active\":\"Movie_active__hKu-v\",\"films\":\"Movie_films__Z29iz\",\"favoriteBtn\":\"Movie_favoriteBtn__K068G\"};","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { ReactComponent as Heart } from 'image/heart-icon.svg';\nimport { ReactComponent as HeartFilled } from 'image/heart-filled-icon.svg';\n\nimport css from './Movie.module.css';\n\nexport const Movie = ({ movie, onRemoveFromFavorites }) => {\n  const [isFavorite, setIsFavorite] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const favoriteMovies =\n      JSON.parse(localStorage.getItem('favoriteMovies')) || [];\n    setIsFavorite(\n      favoriteMovies.some(favoriteMovie => favoriteMovie.id === movie.id)\n    );\n  }, [movie.id]);\n\n  const toggleFavorite = () => {\n    if (isFavorite) {\n      removeFromFavorites();\n    } else {\n      addToFavorites();\n    }\n  };\n  const addToFavorites = () => {\n    let favoriteMovies =\n      JSON.parse(localStorage.getItem('favoriteMovies')) || [];\n    favoriteMovies.push(movie);\n    localStorage.setItem('favoriteMovies', JSON.stringify(favoriteMovies));\n    setIsFavorite(true);\n  };\n  const removeFromFavorites = () => {\n    const storedMovies = JSON.parse(localStorage.getItem('favoriteMovies'));\n    let favoriteMovies = [];\n    if (storedMovies) {\n      favoriteMovies = storedMovies.filter(\n        storedMovie => storedMovie.id !== movie.id\n      );\n      localStorage.setItem('favoriteMovies', JSON.stringify(favoriteMovies));\n    }\n    onRemoveFromFavorites(movie.id);\n    setIsFavorite(false);\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <Link\n        to={`/movies/${movie.id}`}\n        className={css.item}\n        key={movie.id}\n        state={{ from: location }}\n      >\n        <div className={css.img}>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : 'https://www.drupal.org/files/project-images/broken-image.jpg'\n            }\n            alt={movie.original_title}\n            loading=\"lazy\"\n          />\n        </div>\n      </Link>\n      <div className={css.description}>\n        <p className={css.name}>{movie.title || movie.name}</p>\n        <div className={css.container}>\n          <p className={css.info}>\n            {movie.release_date || movie.first_air_date}\n          </p>\n          <span className={css.rating}>{movie.vote_average?.toFixed(2)}</span>\n        </div>\n      </div>\n      <button\n        className={css.favoriteBtn}\n        type=\"button\"\n        onClick={toggleFavorite}\n      >\n        {isFavorite ? 'Remove from Favorites' : 'Add to Favorites'}\n        {isFavorite ? <HeartFilled /> : <Heart />}\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"films\":\"MovieList_films__YHG2-\"};","import { nanoid } from 'nanoid';\n\nimport { Movie } from 'components/Movie/Movie';\n\nimport css from './MovieList.module.css';\n\nexport const MovieList = ({ movies, onRemoveFromFavorites }) => {\n  const uniqueMovies = movies.filter((movie, index) => {\n    return movies.findIndex(m => m.id === movie.id) === index;\n  });\n  return (\n    <ul className={css.films}>\n      {uniqueMovies?.map(movie => {\n        return (\n          <Movie\n            key={nanoid()}\n            movie={movie}\n            onRemoveFromFavorites={onRemoveFromFavorites}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n","import { useState } from 'react';\n\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 8 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function GenresList({ genres, selectedGenres, onGenreSelect }) {\n  const [genreName, setGenreName] = useState([]);\n\n  const handleChange = event => {\n    const {\n      target: { value },\n    } = event;\n    setGenreName(value);\n    onGenreSelect(value);\n  };\n  return (\n    <>\n      <FormControl\n        sx={{ m: 1, width: 300, backgroundColor: 'white', borderRadius: '3px' }}\n      >\n        <InputLabel\n          sx={{\n            color: genreName.length > 0 ? 'white' : '#808080',\n            marginTop: genreName.length > 0 ? '-8px' : '-3px',\n          }}\n          id=\"demo-multiple-checkbox-label\"\n        >\n          Genres\n        </InputLabel>\n        <Select\n          labelId=\"demo-multiple-checkbox-label\"\n          id=\"demo-multiple-checkbox\"\n          multiple\n          value={genreName}\n          onChange={handleChange}\n          input={<OutlinedInput sx={{ height: 48 }} label=\"Genres\" />}\n          renderValue={selected => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {genres?.map(genre => (\n            <MenuItem key={genre.id} value={genre.name}>\n              <Checkbox checked={selectedGenres.indexOf(genre.name) > -1} />\n              <ListItemText primary={genre.name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Movies_Searchbar__x0Q8w\",\"SearchForm\":\"Movies_SearchForm__wjo2h\",\"SearchFormButton\":\"Movies_SearchFormButton__8YSXn\",\"SearchFormInput\":\"Movies_SearchFormInput__bFrPB\",\"noFound\":\"Movies_noFound__hUq6p\",\"SearchFormInputByYear\":\"Movies_SearchFormInputByYear__AxH89\",\"SearchByYearFormButton\":\"Movies_SearchByYearFormButton__uJA-D\",\"SearchFormByYear\":\"Movies_SearchFormByYear__8nDp6\",\"pagination\":\"Movies_pagination__0Ilwr\"};","import { useContext } from 'react';\nimport { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Pagination} from '@mui/material';\n\nimport { MoviesContext } from 'context/MoviesContext';\nimport {\n  getMovieByQuery,\n  getAllMovies,\n  getAllGenres,\n} from 'components/API/fetch';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport GenresList from 'components/GenresList/GenresList';\n\nimport css from './Movies.module.css';\n\nexport default function Movies() {\n  const {\n    totalPages,\n    currentPage,\n    allMovies,\n    searchMovies,\n    searchQuery,\n    isFormSubmitted,\n    selectedGenres,\n    genres,\n    releaseYear,\n    setAllMovies,\n    setSearchMovies,\n    setSearchQuery,\n    setIsFormSubmitted,\n    setSelectedGenres,\n    setGenres,\n    setReleaseYear,\n    setIsFavorite,\n    setCurrentPage,\n    setTotalPages,\n  } = useContext(MoviesContext);\n\n  const [searchParams, setSearchParams] = useSearchParams({ query: '' });\n\n  const movieToSearch = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    getAllGenres(setGenres);\n  }, [setGenres]);\n\n  useEffect(() => {\n    getAllMovies(currentPage, setAllMovies, setTotalPages, releaseYear);;\n\n  }, [currentPage, setAllMovies, setTotalPages, releaseYear]);\n\n  useEffect(() => {\n    if (!movieToSearch) return;\n    setSearchQuery(movieToSearch);\n    getMovieByQuery(currentPage, movieToSearch, setSearchMovies, setTotalPages, releaseYear);\n  }, [currentPage, movieToSearch, setSearchQuery, setSearchMovies, setTotalPages, releaseYear]);\n\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsFormSubmitted(true);\n    setCurrentPage(1);\n    setSearchMovies(null);\n    setSearchParams({ query: searchQuery });\n  };\n  const handleGenreSelect = selectedGenres => {\n    setSelectedGenres(selectedGenres);\n  };\n\n  const filterMoviesByGenreAndYear = movies => {\n    let filteredMovies = movies;\n\n    if (selectedGenres.length > 0) {\n      const genreIds = getGenreId(selectedGenres);\n      filteredMovies = filteredMovies.filter(movie =>\n        movie.genre_ids?.some(genreId => genreIds.includes(genreId))\n      );\n    }\n\n    if (releaseYear) {\n      filteredMovies = filteredMovies.filter(movie =>\n        movie.release_date?.startsWith(releaseYear)\n      );\n    }\n    return filteredMovies;\n  };\n\n  const getGenreId = selectedGenres => {\n    const genreIds = [];\n    selectedGenres.forEach(selectedGenre => {\n      const genre = genres.find(genre => genre.name === selectedGenre);\n      if (genre) {\n        genreIds.push(genre.id);\n      }\n    });\n    return genreIds;\n  };\n  const handleReleaseYearChange = event => {\n    const { value } = event.target;\n    const formattedValue = value.replace(/\\D/g, '').slice(0, 4);\n    if (!formattedValue) {\n      toast.error(`Enter year in right format e.g. 2022!`);\n    }\n    getAllMovies(1, setAllMovies, setTotalPages, formattedValue);\nsetReleaseYear(formattedValue);\n  };\n\n  const handleIsFavorite = () => {\n    setIsFavorite(false);\n  };\n\n  const filteredMovies = filterMoviesByGenreAndYear(searchMovies || allMovies);\n\n  const handlePageChange = (event, page) => {\n    setCurrentPage(page);\n    getAllMovies(page, setAllMovies, setTotalPages, movieToSearch);\n  };\n\n  return (\n    <>\n      <header className={css.Searchbar}>\n        <form className={css.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={css.SearchFormButton}></button>\n          <input\n            className={css.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"searchMovie\"\n            autoFocus\n            placeholder=\"Search movie\"\n            onChange={e => setSearchQuery(e.target.value)}\n          />\n        </form>\n        <form className={css.SearchByYearForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={css.SearchByYearFormButton}></button>\n          <input\n            className={css.SearchFormInputByYear}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"releaseYear\"\n            value={releaseYear}\n            placeholder=\"Release Year\"\n            onChange={handleReleaseYearChange}\n          />\n        </form>\n        <GenresList\n          genres={genres}\n          selectedGenres={selectedGenres}\n          onGenreSelect={handleGenreSelect}\n        />\n      </header>\n      <main>\n        {filteredMovies?.length > 0 ? (\n          <MovieList\n            movies={filteredMovies}\n            onRemoveFromFavorites={handleIsFavorite}\n          />\n        ) : (\n          isFormSubmitted && (\n            <p className={css.noFound}>\n              Nothing found... Please try to search another movie!\n            </p>\n          )\n        )}\n          <Pagination\n  count={totalPages}\n  page={currentPage}\n  onChange={handlePageChange}\n  color=\"secondary\"\n  size=\"large\"\n  className={css.pagination}\n/>\n      </main>\n\n    </>\n  );\n}\n"],"names":["axios","api_key","getAllGenres","onFetch","data","genres","toast","message","getAllMovies","page","totalPagesCallback","releaseYear","releaseYearQuery","results","total_pages","getTrendingMovie","params","getMovieByQuery","query","getMovieInfo","movie_id","getReviews","getCast","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHeartIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeLinecap","strokeLinejoin","ForwardRef","SvgHeartFilledIcon","Movie","movie","onRemoveFromFavorites","useState","isFavorite","setIsFavorite","location","useLocation","useEffect","favoriteMovies","JSON","parse","localStorage","getItem","some","favoriteMovie","addToFavorites","push","setItem","stringify","removeFromFavorites","storedMovies","filter","storedMovie","className","css","to","state","from","src","poster_path","alt","original_title","loading","name","release_date","first_air_date","vote_average","toFixed","type","onClick","MovieList","movies","uniqueMovies","index","findIndex","m","map","nanoid","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","GenresList","selectedGenres","onGenreSelect","genreName","setGenreName","FormControl","sx","backgroundColor","borderRadius","InputLabel","color","marginTop","Select","labelId","multiple","value","onChange","event","input","OutlinedInput","label","renderValue","selected","join","genre","MenuItem","Checkbox","checked","ListItemText","primary","Movies","useContext","MoviesContext","totalPages","currentPage","allMovies","searchMovies","searchQuery","isFormSubmitted","setAllMovies","setSearchMovies","setSearchQuery","setIsFormSubmitted","setSelectedGenres","setGenres","setReleaseYear","setCurrentPage","setTotalPages","useSearchParams","searchParams","setSearchParams","movieToSearch","get","handleSubmit","preventDefault","getGenreId","genreIds","forEach","selectedGenre","find","filteredMovies","genre_ids","genreId","includes","startsWith","filterMoviesByGenreAndYear","onSubmit","autoComplete","autoFocus","placeholder","e","formattedValue","replace","slice","Pagination","count","size"],"sourceRoot":""}